#pragma checksum "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\Game\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2b6f9c5a097f02bbd85919c9fef9ff43f8b0af69"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Game_Index), @"mvc.1.0.view", @"/Views/Game/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Game/Index.cshtml", typeof(AspNetCore.Views_Game_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\_ViewImports.cshtml"
using BullsAndCows;

#line default
#line hidden
#line 2 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\_ViewImports.cshtml"
using BullsAndCows.Models;

#line default
#line hidden
#line 3 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\_ViewImports.cshtml"
using BullsAndCows.Web;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b6f9c5a097f02bbd85919c9fef9ff43f8b0af69", @"/Views/Game/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b9dd9cbfcd9924ba8f870196adc3fc1b74e4522d", @"/Views/_ViewImports.cshtml")]
    public class Views_Game_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(13, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\Game\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(103, 1040, true);
            WriteLiteral(@"
<div class=""container"">
    <h3 class=""text-center mb-5 mt-3""><span style=""border-bottom: 3px solid black"">Guess the number:</span></h3>
    <div class=""row flex-column flex-sm-row justify-content-center align-content-center"">
        <div class=""col-12 col-sm-4 d-flex flex-column justify-content-center align-items-center"" id=""userInputBlock"">
            <label for=""userNumber"" class=""lead"" style=""font-weight: 400"">Type your guess below:</label>
            <input class=""d-block mt-1 mb-3 p-1 text-center"" type=""number"" id=""userNumber"" placeholder=""Your number..."" style=""border-radius: 5px; font-size:1.1rem"" />
            <button class=""btn btn-primary"" id=""playBtn"">Make a guess</button>
        </div>
        <div class=""col-12 col-md-5 d-flex justify-content-center align-items-center"">
            <ul class=""py-3 text-center"" id=""guessesList"" style=""font-size: 1.2rem;""></ul>
        </div>
        <div class=""col-12 col-md-3 d-flex justify-content-center align-items-center"">
            <p cl");
            WriteLiteral("ass=\"display-4\">");
            EndContext();
            BeginContext(1144, 5, false);
#line 20 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\Game\Index.cshtml"
                            Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(1149, 2564, true);
            WriteLiteral(@"</p>
        </div>
    </div>
</div>

<script>
(function play(answer) {
    let playBtn = document.getElementById(""playBtn"");
    playBtn.addEventListener(""click"", onPlayerGuess);

    let userGuessesList = document.getElementById(""guessesList"");
    let userInputBlock = document.getElementById(""userInputBlock"");
    let userInput = document.getElementById(""userNumber"");

    let playerGuessesCounter = 0;
    let answerNumberArr = Array.from(answer.toString());

    function onPlayerGuess() {
        playerGuessesCounter++;

        let userNumStr = userInput.value;
        let userNumber = Number(userNumStr);

        if (userNumStr === """" || !Number.isInteger(userNumber) || userNumber < 0 || userNumStr.startsWith(""0"")) {
            playerGuessesCounter--;
            alert(""Please enter a valid positive integer number!"");
            return;
        }

        if (playerGuessesCounter > 8)
        {
            let looseElement = document.createElement(""p"");
            loo");
            WriteLiteral(@"seElement.classList.add(""text-danger"");
            looseElement.classList.add(""mt-3"");
            looseElement.classList.add(""display-4"");
            looseElement.textContent = ""You lost!"";

            userInputBlock.appendChild(looseElement);
            playBtn.removeEventListener(""click"", onPlayerGuess);
            playBtn.disabled = true;
        } else {

            if (userNumber === answer) {

            } else {
                let userNumberArr = Array.from(userNumStr);
                let bullsCount = 0;
                let cowsCount = 0;

                for (let i = 0; i < userNumberArr.length; i++) {
                    const numStr = userNumberArr[i];

                    if (answerNumberArr.includes(numStr)) {
                        let numIndex = answerNumberArr.indexOf(numStr);

                        if (i === numIndex) {
                            bullsCount++;
                        } else {
                            cowsCount++;
                    ");
            WriteLiteral(@"    }
                    }
                }

                let output = document.createElement(""li"");
                output.classList.add(""mb-1"");

                let bullsWord = bullsCount === 1 ? ""bull"" : ""bulls"";
                let cowsWord = cowsCount === 1 ? ""cow"" : ""cows"";

                output.textContent = `${bullsCount} ${bullsWord} and ${cowsCount} ${cowsWord}. Your guess: ${userNumber}`;

                userGuessesList.appendChild(output);
            }
        }

    }
})(");
            EndContext();
            BeginContext(3714, 5, false);
#line 96 "C:\Users\volenpopov\Desktop\Project\ASP.NET-BullsAndCows\BullsAndCows.Web\Views\Game\Index.cshtml"
Write(Model);

#line default
#line hidden
            EndContext();
            BeginContext(3719, 17, true);
            WriteLiteral(");\r\n</script>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int> Html { get; private set; }
    }
}
#pragma warning restore 1591
